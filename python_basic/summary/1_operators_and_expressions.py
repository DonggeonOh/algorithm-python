# ** = ^ 으로 표시 가능
print(2**3)  # 2의 3제곱


# 나머지 연산은 %로 동일하지만
# 몫 연산의 경우 // 연산자를 통해 연산 가능
print(5 // 3)  # 1


# **=, //= 과 같은 수식도 된다
ex1 = 2
ex2 = 5
ex1 **= 3  # (2의 3제곱)
ex2 //= 2  # (5 나누기 2의 몫)


# and 논리 연산자
# and or &
print((3 > 0) and (3 < 5))
print((3 > 0) & (3 < 5))


# or 논리 연산자
print((3 > 0) or (3 < 5))
print((3 > 0) | (3 < 5))


# 범위 사이를 비교할 때 다른 언어와 달리
# x < 값 < y 와 같이 나타낼 수 있다.
print(3 < 4 < 5)
print(5 > 4 > 3)


# is 와 == 의 차이
# is 는 객체(object)를 비교
# == 은 값(value)를 비교
a = [1, 2, 3]
b = a
c = [1, 2, 3]
print(a is b)  # True - a 와 b 는 서로 같은 객체이다.
print(a is c)  # False - 왜냐, 다른 객체이기 때문이다.
print(a == b)  # True - a 와 b 는 서로 같은 값을 가지므로 True 이다.
print(a == c)  # True - 같은 값을 가지고 있기 때문에 True 이다.
